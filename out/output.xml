<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.1 (Python 3.9.15 on linux)" generated="20230119 06:28:28.132" rpa="false" schemaversion="3">
<suite id="s1" name="Conditional" source="/home/cisco/cxta/conditional.robot">
<test id="s1-t1" name="LOAD THE TESTBED" line="14">
<kw name="load testbed &quot;/home/cisco/cxta/CML_lab2.yaml&quot;" library="CXTA.robot.Testbed" sourcename="load testbed &quot;${testbed:[^&quot;]+}&quot;">
<doc>Sets the current testbed to the file specified in the testbed parameter</doc>
<msg timestamp="20230119 06:28:32.541" level="TRACE">Arguments: [ '/home/cisco/cxta/CML_lab2.yaml' ]</msg>
<msg timestamp="20230119 06:28:32.542" level="INFO">Loading testbed from file /home/cisco/cxta/CML_lab2.yaml</msg>
<msg timestamp="20230119 06:28:32.661" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.662" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.665" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.666" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.667" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.668" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.670" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.670" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.671" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.672" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.673" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.674" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.675" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.676" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.677" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.678" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.679" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.680" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.682" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.683" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.685" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.686" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.687" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.688" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.689" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.689" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.692" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.694" level="DEBUG">Credential credentials not found, trying default ...</msg>
<msg timestamp="20230119 06:28:32.698" level="INFO">+------------------------------------------------------------------------------+
|                            Genie datafiles used:                             |
+------------------------------------------------------------------------------+</msg>
<msg timestamp="20230119 06:28:32.699" level="INFO">Trigger datafile          | </msg>
<msg timestamp="20230119 06:28:32.700" level="INFO">Verification  datafile    | </msg>
<msg timestamp="20230119 06:28:32.701" level="INFO">Pts datafile              | /venv/lib/python3.9/site-packages/genie/libs/sdk/genie_yamls/pts_datafile.yaml</msg>
<msg timestamp="20230119 06:28:32.702" level="INFO">Subsection datafile       | /venv/lib/python3.9/site-packages/genie/libs/sdk/genie_yamls/subsection_datafile.yaml</msg>
<msg timestamp="20230119 06:28:32.703" level="INFO">Config datafile           | None</msg>
<msg timestamp="20230119 06:28:32.705" level="DEBUG">loading yaml file /venv/lib/python3.9/site-packages/genie/libs/sdk/genie_yamls/pts_datafile.yaml</msg>
<msg timestamp="20230119 06:28:32.730" level="TRACE">Return: &lt;Testbed object 'test_project' at 0x7f7fc7b66a30&gt;</msg>
<status status="PASS" starttime="20230119 06:28:32.538" endtime="20230119 06:28:32.730"/>
</kw>
<status status="PASS" starttime="20230119 06:28:32.526" endtime="20230119 06:28:32.736"/>
</test>
<test id="s1-t2" name="VERIFY LOOPBACK IP" line="17">
<kw name="connect to device &quot;${test_devices[0]}&quot;" library="CXTA.robot.DeviceCli" sourcename="connect to device &quot;${device:[^&quot;]+}&quot;">
<doc>Connects to the device identified by name (from the testbed file) using the connection information
specified in the connections-&gt;vty header in the testbed file.</doc>
<msg timestamp="20230119 06:28:32.752" level="TRACE">Arguments: [ 'PE1' ]</msg>
<msg timestamp="20230119 06:28:32.762" level="INFO">Connecting to PE1</msg>
<msg timestamp="20230119 06:28:32.763" level="INFO">Connecting to device 'Device PE1, type router'</msg>
<msg timestamp="20230119 06:28:32.764" level="INFO">kwargs: {'via': None, 'alias': None, 'init_config_commands': [], 'learn_hostname': False, 'settings': {'POST_DISCONNECT_WAIT_SEC': 0, 'ESCAPE_CHAR_PROMPT_WAIT': 2, 'IGNORE_CHATTY_TERM_OUTPUT': True}, 'logfile': '/home/cisco/cxta/out/device_logs/PE1-20230119T062832754.log'}</msg>
<msg timestamp="20230119 06:28:32.784" level="DEBUG">Connection manager added new connection via cli with alias cli</msg>
<msg timestamp="20230119 06:28:39.338" level="DEBUG">No categories provided, attempting to learn</msg>
<msg timestamp="20230119 06:28:39.339" level="INFO">Categories learned: ['ios', 'xr']</msg>
<msg timestamp="20230119 06:28:39.341" level="INFO">2023-01-19 06:28:32,775: %UNICON-INFO: +++ PE1 logfile /home/cisco/cxta/out/device_logs/PE1-20230119T062832754.log +++

2023-01-19 06:28:32,776: %UNICON-INFO: +++ Unicon plugin iosxr/asr9k (unicon.plugins.iosxr.asr9k) +++
Warning: Permanently added '10.52.158.211' (ECDSA) to the list of known hosts.


2023-01-19 06:28:34,506: %UNICON-INFO: +++ connection to spawn: ssh -l cisco 10.52.158.211, id: 140186775371008 +++

2023-01-19 06:28:34,509: %UNICON-INFO: connection to PE1
(cisco@10.52.158.211) Password: 


RP/0/RP0/CPU0:PE1#

2023-01-19 06:28:37,073: %UNICON-INFO: +++ initializing handle +++

2023-01-19 06:28:37,394: %UNICON-INFO: +++ PE1 with via 'cli': executing command 'terminal length 0' +++
terminal length 0
Thu Jan 19 06:27:56.587 UTC
RP/0/RP0/CPU0:PE1#

2023-01-19 06:28:38,474: %UNICON-INFO: +++ PE1 with via 'cli': executing command 'terminal width 0' +++
terminal width 0
Thu Jan 19 06:27:57.666 UTC
RP/0/RP0/CPU0:PE1#</msg>
<msg timestamp="20230119 06:28:39.342" level="TRACE">Return: &lt;Device PE1 at 0x7f7fc7a7b670&gt;</msg>
<status status="PASS" starttime="20230119 06:28:32.749" endtime="20230119 06:28:39.342"/>
</kw>
<kw name="use device &quot;${test_devices[0]}&quot;" library="CXTA.robot.DeviceCli" sourcename="use device &quot;${device:[^&quot;]+}&quot;">
<doc>"CXTA.robot.DeviceCli.use device "${device:[^"]+}"" has been deprecated. Please use the keyword: select device "${device:[^"]+}"</doc>
<msg timestamp="20230119 06:28:39.358" level="TRACE">Arguments: [ 'PE1' ]</msg>
<msg timestamp="20230119 06:28:39.358" level="WARN">"CXTA.robot.DeviceCli.use device "${device:[^"]+}"" has been deprecated. Please use the keyword: select device "${device:[^"]+}"</msg>
<msg timestamp="20230119 06:28:39.363" level="TRACE">Return: 'PE1'</msg>
<status status="PASS" starttime="20230119 06:28:39.351" endtime="20230119 06:28:39.363"/>
</kw>
<kw name="run &quot;show run int Loopback11&quot;" library="CXTA.robot.DeviceCli" sourcename="run &quot;${command:[^&quot;]+}&quot;">
<doc>Executes a raw CLI command on the current device set via the ``select device ...`` keywords</doc>
<msg timestamp="20230119 06:28:39.375" level="TRACE">Arguments: [ 'show run int Loopback11' ]</msg>
<msg timestamp="20230119 06:28:39.687" level="INFO">Executing "show run int Loopback11" on device "PE1" with connection "cli"...
</msg>
<msg timestamp="20230119 06:28:39.689" level="DEBUG">Using default unicon error checking</msg>
<msg timestamp="20230119 06:28:40.761" level="INFO">2023-01-19 06:28:40,064: %UNICON-INFO: +++ PE1 with via 'cli': executing command 'show run int Loopback11' +++
show run int Loopback11
Thu Jan 19 06:27:59.257 UTC
interface Loopback11
 description For_testing
 ipv4 address 11.11.11.11 255.255.255.255
!

RP/0/RP0/CPU0:PE1#</msg>
<msg timestamp="20230119 06:28:40.763" level="TRACE">Return: '\rThu Jan 19 06:27:59.257 UTC\r\ninterface Loopback11\r\n description For_testing\r\n ipv4 address 11.11.11.11 255.255.255.255\r\n!'</msg>
<status status="PASS" starttime="20230119 06:28:39.369" endtime="20230119 06:28:40.763"/>
</kw>
<kw name="output contains &quot;11.11.11.11&quot;" library="CXTA.robot.Parsing" sourcename="output contains &quot;${string:[^&quot;]+}&quot;">
<doc>Checks if a string is found contained within the last output returned from the device</doc>
<msg timestamp="20230119 06:28:40.771" level="TRACE">Arguments: [ '11.11.11.11' ]</msg>
<msg timestamp="20230119 06:28:40.771" level="INFO">Checking to see if output contains "11.11.11.11"...</msg>
<msg timestamp="20230119 06:28:40.772" level="INFO">Output contains 11.11.11.11!</msg>
<msg timestamp="20230119 06:28:40.772" level="TRACE">Return: True</msg>
<status status="PASS" starttime="20230119 06:28:40.769" endtime="20230119 06:28:40.772"/>
</kw>
<kw name="output matches pattern &quot;ipv4\\s+address\\s+11.11.11.11\\s+[\\s\\d\\.]+&quot;" library="CXTA.robot.Parsing" sourcename="output matches pattern &quot;${pattern}&quot;">
<doc>Checks if regex matches the pattern supplied. Uses re.DOTALL so this matches across new lines.
This means that all of the output will be checked.</doc>
<msg timestamp="20230119 06:28:40.784" level="TRACE">Arguments: [ 'ipv4\\s+address\\s+11.11.11.11\\s+[\\s\\d\\.]+' ]</msg>
<msg timestamp="20230119 06:28:40.786" level="TRACE">Return: True</msg>
<status status="PASS" starttime="20230119 06:28:40.779" endtime="20230119 06:28:40.786"/>
</kw>
<status status="PASS" starttime="20230119 06:28:32.740" endtime="20230119 06:28:40.789"/>
</test>
<test id="s1-t3" name="VERIFY LOOPBACK IP ENHANCED LOGGING" line="26">
<kw name="connect to device &quot;${test_devices[0]}&quot;" library="CXTA.robot.DeviceCli" sourcename="connect to device &quot;${device:[^&quot;]+}&quot;">
<doc>Connects to the device identified by name (from the testbed file) using the connection information
specified in the connections-&gt;vty header in the testbed file.</doc>
<msg timestamp="20230119 06:28:40.817" level="TRACE">Arguments: [ 'PE1' ]</msg>
<msg timestamp="20230119 06:28:40.820" level="INFO">Connecting to PE1</msg>
<msg timestamp="20230119 06:28:40.822" level="INFO">Connecting to device 'Device PE1, type router'</msg>
<msg timestamp="20230119 06:28:40.823" level="INFO">kwargs: {'via': None, 'alias': None, 'init_config_commands': [], 'learn_hostname': False, 'settings': {'POST_DISCONNECT_WAIT_SEC': 0, 'ESCAPE_CHAR_PROMPT_WAIT': 2, 'IGNORE_CHATTY_TERM_OUTPUT': True}, 'logfile': '/home/cisco/cxta/out/device_logs/PE1-20230119T062840817.log'}</msg>
<msg timestamp="20230119 06:28:40.957" level="INFO">2023-01-19 06:28:40,890: %UNICON-INFO: PE1 is already connected</msg>
<msg timestamp="20230119 06:28:40.959" level="TRACE">Return: &lt;Device PE1 at 0x7f7fc7a7b670&gt;</msg>
<status status="PASS" starttime="20230119 06:28:40.812" endtime="20230119 06:28:40.959"/>
</kw>
<kw name="use device &quot;${test_devices[0]}&quot;" library="CXTA.robot.DeviceCli" sourcename="use device &quot;${device:[^&quot;]+}&quot;">
<doc>"CXTA.robot.DeviceCli.use device "${device:[^"]+}"" has been deprecated. Please use the keyword: select device "${device:[^"]+}"</doc>
<msg timestamp="20230119 06:28:40.971" level="TRACE">Arguments: [ 'PE1' ]</msg>
<msg timestamp="20230119 06:28:40.971" level="WARN">"CXTA.robot.DeviceCli.use device "${device:[^"]+}"" has been deprecated. Please use the keyword: select device "${device:[^"]+}"</msg>
<msg timestamp="20230119 06:28:40.974" level="TRACE">Return: 'PE1'</msg>
<status status="PASS" starttime="20230119 06:28:40.964" endtime="20230119 06:28:40.975"/>
</kw>
<kw name="run &quot;show run int Loopback11&quot;" library="CXTA.robot.DeviceCli" sourcename="run &quot;${command:[^&quot;]+}&quot;">
<doc>Executes a raw CLI command on the current device set via the ``select device ...`` keywords</doc>
<msg timestamp="20230119 06:28:40.985" level="TRACE">Arguments: [ 'show run int Loopback11' ]</msg>
<msg timestamp="20230119 06:28:40.988" level="INFO">Executing "show run int Loopback11" on device "PE1" with connection "cli"...
</msg>
<msg timestamp="20230119 06:28:40.991" level="DEBUG">Using default unicon error checking</msg>
<msg timestamp="20230119 06:28:42.081" level="INFO">2023-01-19 06:28:41,331: %UNICON-INFO: +++ PE1 with via 'cli': executing command 'show run int Loopback11' +++
show run int Loopback11
Thu Jan 19 06:28:00.522 UTC
interface Loopback11
 description For_testing
 ipv4 address 11.11.11.11 255.255.255.255
!

RP/0/RP0/CPU0:PE1#</msg>
<msg timestamp="20230119 06:28:42.082" level="TRACE">Return: '\rThu Jan 19 06:28:00.522 UTC\r\ninterface Loopback11\r\n description For_testing\r\n ipv4 address 11.11.11.11 255.255.255.255\r\n!'</msg>
<status status="PASS" starttime="20230119 06:28:40.980" endtime="20230119 06:28:42.082"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>output contains "11.11.11.11"</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230119 06:28:42.092" level="TRACE">Arguments: [ 'output contains "11.11.11.11"' ]</msg>
<kw name="output contains &quot;11.11.11.11&quot;" library="CXTA.robot.Parsing" sourcename="output contains &quot;${string:[^&quot;]+}&quot;">
<doc>Checks if a string is found contained within the last output returned from the device</doc>
<msg timestamp="20230119 06:28:42.099" level="TRACE">Arguments: [ '11.11.11.11' ]</msg>
<msg timestamp="20230119 06:28:42.099" level="INFO">Checking to see if output contains "11.11.11.11"...</msg>
<msg timestamp="20230119 06:28:42.100" level="INFO">Output contains 11.11.11.11!</msg>
<msg timestamp="20230119 06:28:42.102" level="TRACE">Return: True</msg>
<status status="PASS" starttime="20230119 06:28:42.096" endtime="20230119 06:28:42.102"/>
</kw>
<msg timestamp="20230119 06:28:42.105" level="TRACE">Return: True</msg>
<msg timestamp="20230119 06:28:42.105" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230119 06:28:42.089" endtime="20230119 06:28:42.106"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' == 'True'</arg>
<arg>Set Test Message</arg>
<arg>The Loopback has IP configured.</arg>
<arg>append=True</arg>
<arg>ELSE</arg>
<arg>FAIL</arg>
<arg>The Loopback doesn't have an IP configured.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230119 06:28:42.117" level="TRACE">Arguments: [ "'True' == 'True'" | 'Set Test Message' | 'The Loopback has IP configured.' | 'append=True' | 'ELSE' | 'FAIL' | "The Loopback doesn't have an IP configured." ]</msg>
<kw name="Set Test Message" library="BuiltIn">
<arg>The Loopback has IP configured.</arg>
<arg>append=True</arg>
<doc>Sets message for the current test case.</doc>
<msg timestamp="20230119 06:28:42.124" level="TRACE">Arguments: [ 'The Loopback has IP configured.' | append=True ]</msg>
<msg timestamp="20230119 06:28:42.126" level="INFO">Set test message to:
The Loopback has IP configured.</msg>
<msg timestamp="20230119 06:28:42.127" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230119 06:28:42.120" endtime="20230119 06:28:42.127"/>
</kw>
<msg timestamp="20230119 06:28:42.130" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230119 06:28:42.112" endtime="20230119 06:28:42.130"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>output matches pattern "ipv4\\\\s+address\\\\s+11.11.11.11\\\\s+[\\\\s\\\\d\\\\.]+"</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230119 06:28:42.140" level="TRACE">Arguments: [ 'output matches pattern "ipv4\\\\\\\\s+address\\\\\\\\s+11.11.11.11\\\\\\\\s+[\\\\\\\\s\\\\\\\\d\\\\\\\\.]+"' ]</msg>
<kw name="output matches pattern &quot;ipv4\\s+address\\s+11.11.11.11\\s+[\\s\\d\\.]+&quot;" library="CXTA.robot.Parsing" sourcename="output matches pattern &quot;${pattern}&quot;">
<doc>Checks if regex matches the pattern supplied. Uses re.DOTALL so this matches across new lines.
This means that all of the output will be checked.</doc>
<msg timestamp="20230119 06:28:42.145" level="TRACE">Arguments: [ 'ipv4\\s+address\\s+11.11.11.11\\s+[\\s\\d\\.]+' ]</msg>
<msg timestamp="20230119 06:28:42.146" level="TRACE">Return: True</msg>
<status status="PASS" starttime="20230119 06:28:42.143" endtime="20230119 06:28:42.146"/>
</kw>
<msg timestamp="20230119 06:28:42.148" level="TRACE">Return: True</msg>
<msg timestamp="20230119 06:28:42.148" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230119 06:28:42.136" endtime="20230119 06:28:42.150"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' == 'True'</arg>
<arg>Set Test Message</arg>
<arg>The Loopback has IP configured.</arg>
<arg>append=True</arg>
<arg>ELSE</arg>
<arg>FAIL</arg>
<arg>The Loopback doesn't have an IP configured.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230119 06:28:42.157" level="TRACE">Arguments: [ "'True' == 'True'" | 'Set Test Message' | 'The Loopback has IP configured.' | 'append=True' | 'ELSE' | 'FAIL' | "The Loopback doesn't have an IP configured." ]</msg>
<kw name="Set Test Message" library="BuiltIn">
<arg>The Loopback has IP configured.</arg>
<arg>append=True</arg>
<doc>Sets message for the current test case.</doc>
<msg timestamp="20230119 06:28:42.161" level="TRACE">Arguments: [ 'The Loopback has IP configured.' | append=True ]</msg>
<msg timestamp="20230119 06:28:42.161" level="INFO">Set test message to:
The Loopback has IP configured. The Loopback has IP configured.</msg>
<msg timestamp="20230119 06:28:42.162" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230119 06:28:42.159" endtime="20230119 06:28:42.162"/>
</kw>
<msg timestamp="20230119 06:28:42.163" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230119 06:28:42.154" endtime="20230119 06:28:42.164"/>
</kw>
<status status="PASS" starttime="20230119 06:28:40.794" endtime="20230119 06:28:42.166">The Loopback has IP configured. The Loopback has IP configured.</status>
</test>
<meta name="CXTA Version">22.24</meta>
<status status="PASS" starttime="20230119 06:28:28.150" endtime="20230119 06:28:42.170"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="Conditional">Conditional</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230119 06:28:39.358" level="WARN">"CXTA.robot.DeviceCli.use device "${device:[^"]+}"" has been deprecated. Please use the keyword: select device "${device:[^"]+}"</msg>
<msg timestamp="20230119 06:28:40.971" level="WARN">"CXTA.robot.DeviceCli.use device "${device:[^"]+}"" has been deprecated. Please use the keyword: select device "${device:[^"]+}"</msg>
<msg timestamp="20230119 06:28:42.172" level="WARN">Please help our CX tools usage tracking efforts by setting the project ID (PID) via environment variable CUSTOMER_PID or via keyword 'callhome set customer pid to "xx"'. Please refer to https://wwwin-github.cisco.com/pages/AS-Community/CXTA/libdoc/CXTA.robot.CallHome.html for more information</msg>
</errors>
</robot>
